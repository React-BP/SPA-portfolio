"use strict";

exports.__esModule = true;
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

require("babel-polyfill");

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var previousTouchMove = Symbol();
var scrolling = Symbol();

var ReactPageScroller = function (_React$Component) {
    _inherits(ReactPageScroller, _React$Component);

    function ReactPageScroller(props) {
        _classCallCheck(this, ReactPageScroller);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.componentDidMount = function () {

            window.addEventListener('resize', _this.onWindowResized);

            document.ontouchmove = function (event) {
                event.preventDefault();
            };

            _this._pageContainer.addEventListener("wheel", _this.wheelScroll);
            _this._pageContainer.addEventListener("touchmove", _this.touchMove);
            _this._pageContainer.addEventListener("keydown", _this.keyPress);

            var componentsToRender = [];

            if (!_lodash2.default.isNil(_this.props.children[_this.state.componentIndex])) {
                componentsToRender.push(_react2.default.createElement(
                    "div",
                    { key: _this.state.componentIndex, ref: function ref(c) {
                            return _this["container_" + _this.state.componentIndex] = c;
                        },
                        style: { height: "100%", width: "100%" } },
                    _this.props.children[_this.state.componentIndex]
                ));
            } else {
                componentsToRender.push(_react2.default.createElement(
                    "div",
                    { ref: function ref(c) {
                            return _this["container_" + _this.state.componentIndex] = c;
                        },
                        style: { height: "100%", width: "100%" } },
                    _this.props.children
                ));
            }

            _this.addNextComponent(componentsToRender);
        };

        _this.componentWillUnmount = function () {

            window.removeEventListener('resize', _this.onWindowResized);

            _this._pageContainer.removeEventListener("wheel", _this.wheelScroll);
            _this._pageContainer.removeEventListener("touchmove", _this.touchMove);
            _this._pageContainer.removeEventListener("keydown", _this.keyPress);
        };

        _this.onWindowResized = function () {
            _this.forceUpdate();
        };

        _this.addNextComponent = function (onMountedComponents) {

            var componentsToRender = [];

            if (!_lodash2.default.isNil(onMountedComponents)) {
                componentsToRender = [].concat(onMountedComponents);
            }

            componentsToRender = [].concat(componentsToRender, _this.state.componentsToRender);

            if (!componentsToRender[_this.state.componentIndex + 1]) {
                if (!_lodash2.default.isNil(_this.props.children[_this.state.componentIndex + 1])) {
                    componentsToRender.push(_react2.default.createElement(
                        "div",
                        { key: _this.state.componentIndex + 1,
                            ref: function ref(c) {
                                return _this["container_" + (_this.state.componentIndex + 1)] = c;
                            },
                            style: { height: "100%", width: "100%" } },
                        _this.props.children[_this.state.componentIndex + 1]
                    ));
                }
            }

            _this.setState({ componentsToRender: [].concat(componentsToRender) });
        };

        _this.wheelScroll = function (event) {

            if (event.deltaY < 0) {
                _this.scrollWindowUp();
            } else {
                _this.scrollWindowDown();
            }
        };

        _this.touchMove = function (event) {

            if (!_lodash2.default.isNull(_this[previousTouchMove])) {
                if (event.touches[0].clientY > _this[previousTouchMove]) {
                    _this.scrollWindowUp();
                } else {
                    _this.scrollWindowDown();
                }
            } else {
                _this[previousTouchMove] = event.touches[0].clientY;
            }
        };

        _this.keyPress = function (event) {

            if (_lodash2.default.isEqual(event.keyCode, 38)) {
                _this.scrollWindowUp();
            }
            if (_lodash2.default.isEqual(event.keyCode, 40)) {
                _this.scrollWindowDown();
            }
        };

        _this.scrollWindowUp = function () {

            if (!_lodash2.default.isNil(_this["container_" + (_this.state.componentIndex - 1)]) && !_this[scrolling]) {

                _this[scrolling] = true;
                _this._pageContainer.style.transform = "translate3d(0, " + (_this.state.componentIndex - 1) * -100 + "%, 0)";

                if (_this.props.pageOnChange) {
                    _this.props.pageOnChange(_this.state.componentIndex);
                }

                setTimeout(function () {
                    _this.setState(function (prevState) {
                        return { componentIndex: prevState.componentIndex - 1 };
                    }, function () {
                        _this[scrolling] = false;
                        _this[previousTouchMove] = null;
                    });
                }, _this.props.animationTimer + 200);
            } else if (_this.props.scrollUnavailable) {
                _this.props.scrollUnavailable();
            }
        };

        _this.scrollWindowDown = function () {

            if (!_lodash2.default.isNil(_this["container_" + (_this.state.componentIndex + 1)]) && !_this[scrolling]) {

                _this[scrolling] = true;
                _this._pageContainer.style.transform = "translate3d(0, " + (_this.state.componentIndex + 1) * -100 + "%, 0)";

                if (_this.props.pageOnChange) {
                    _this.props.pageOnChange(_this.state.componentIndex + 2);
                }

                setTimeout(function () {
                    _this.setState(function (prevState) {
                        return { componentIndex: prevState.componentIndex + 1 };
                    }, function () {
                        _this[scrolling] = false;
                        _this[previousTouchMove] = null;
                        _this.addNextComponent();
                    });
                }, _this.props.animationTimer + 200);
            } else if (_this.props.scrollUnavailable) {
                _this.props.scrollUnavailable();
            }
        };

        _this.goToPage = function (number) {
            if (!_lodash2.default.isEqual(_this.state.componentIndex, number)) {
                if (!_lodash2.default.isNil(_this["container_" + number]) && !_this[scrolling]) {

                    _this[scrolling] = true;
                    _this._pageContainer.style.transform = "translate3d(0, " + number * -100 + "%, 0)";

                    if (_this.props.pageOnChange) {
                        _this.props.pageOnChange(number + 1);
                    }

                    if (_lodash2.default.isNil(_this["container_" + number])) _this.state.componentsToRender.push(_react2.default.createElement(
                        "div",
                        { key: number + 1,
                            ref: function ref(c) {
                                return _this["container_" + number] = c;
                            },
                            style: { height: "100%", width: "100%" } },
                        _this.props.children[number]
                    ));

                    setTimeout(function () {
                        _this.setState(function (prevState) {
                            return { componentIndex: number };
                        }, function () {
                            _this[scrolling] = false;
                            _this[previousTouchMove] = null;
                        });
                    }, _this.props.animationTimer + 200);
                } else if (!_this[scrolling] && !_lodash2.default.isNil(_this.props.children[number])) {

                    var componentsLength = _this.state.componentsToRender.length;

                    var _loop = function _loop(i) {
                        _this.state.componentsToRender.push(_react2.default.createElement(
                            "div",
                            { key: i + 1,
                                ref: function ref(c) {
                                    return _this["container_" + i] = c;
                                },
                                style: { height: "100%", width: "100%" } },
                            _this.props.children[i]
                        ));
                    };

                    for (var i = componentsLength; i <= number; i++) {
                        _loop(i);
                    }

                    _this[scrolling] = true;
                    _this._pageContainer.style.transform = "translate3d(0, " + number * -100 + "%, 0)";

                    if (_this.props.pageOnChange) {
                        _this.props.pageOnChange(number + 1);
                    }

                    setTimeout(function () {
                        _this.setState(function (prevState) {
                            return { componentIndex: number };
                        }, function () {
                            _this[scrolling] = false;
                            _this[previousTouchMove] = null;
                        });
                    }, _this.props.animationTimer + 200);
                }
            }
        };

        _this.state = { componentIndex: 0, componentsToRender: [] };
        _this[previousTouchMove] = null;
        _this[scrolling] = false;
        return _this;
    }

    ReactPageScroller.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            animationTimer = _props.animationTimer,
            transitionTimingFunction = _props.transitionTimingFunction;


        return _react2.default.createElement(
            "div",
            { style: { width: window.innerWidth, height: window.innerHeight, overflow: "hidden" } },
            _react2.default.createElement(
                "div",
                { ref: function ref(c) {
                        return _this2._pageContainer = c;
                    },
                    style: {
                        height: "100%",
                        width: "100%",
                        transition: "transform " + animationTimer + "ms " + transitionTimingFunction
                    },
                    tabIndex: 0 },
                this.state.componentsToRender
            )
        );
    };

    _createClass(ReactPageScroller, null, [{
        key: "propTypes",
        get: function get() {
            return {
                animationTimer: _propTypes2.default.number,
                transitionTimingFunction: _propTypes2.default.string,
                pageOnChange: _propTypes2.default.func,
                scrollUnavailable: _propTypes2.default.func
            };
        }
    }, {
        key: "defaultProps",
        get: function get() {
            return {
                animationTimer: 1000,
                transitionTimingFunction: "ease-in-out"
            };
        }
    }]);

    return ReactPageScroller;
}(_react2.default.Component);

exports.default = ReactPageScroller;
module.exports = exports["default"];